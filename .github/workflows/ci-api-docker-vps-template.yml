name: CI API Docker VPS

on:
  workflow_call:
    inputs:
      JAVA_VERSION:
        required: true
        type: string
      DOCKER_IMAGE_PREFIX:
        required: true
        type: string
      SERVICES:
        required: true
        type: string
      PORTS:
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
        
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: "Login to Docker Hub"
        uses: docker/login-action@v2
        with:
          username: ${{ inputs.DOCKER_USERNAME }}
          password: ${{ inputs.DOCKER_PASSWORD }}

      - name: "Baixar CÃ³digo"
        uses: actions/checkout@v4

      - name: "Setar Java 17"
        uses: actions/setup-java@v2
        with:
          java-version: ${{ inputs.JAVA_VERSION }}
          java-package: 'jdk'
          architecture: 'x64'
          distribution: 'temurin'

      - name: "Instalar Maven"
        run: sudo apt-get update && sudo apt-get install -y maven

      - name: "Build do Projeto"
        run: mvn clean package -DskipTests

      - name: "Build and Push Docker images"
        run: |
          cd worship-api

          for i in $(seq 1 $(echo ${{ inputs.SERVICES }} | wc -w)); do
            service=$(echo ${{ inputs.SERVICES }} | cut -d ' ' -f $i)
            port=$(echo ${{ inputs.PORTS }} | cut -d ' ' -f $i)
            echo "Building and pushing $service on port $port..."
            cd $service

            docker build --build-arg EXPOSE_PORT=$port \
            --build-arg JAR_FILE="target/$service.jar" \
            --build-arg ENTRYPOINT_FILE=${{ inputs.ENTRYPOINT_FILE }} \
            --build-arg SPRING_PROFILE=${{ inputs.SPRING_PROFILE }} \
            -t ${{ inputs.DOCKER_IMAGE_PREFIX }}:$service . || exit 1
            cd ..

            docker push ${{ inputs.DOCKER_IMAGE_PREFIX }}:$service
          done
