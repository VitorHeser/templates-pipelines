name: CD Docker VPS

on:
  workflow_call:
    inputs:
      DOCKER_IMAGE_PREFIX:
        required: true
        type: string
      SERVICES:
        required: true
        type: string
      PORTS:
        required: true
        type: string
      PORTSOUT:
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
        
jobs:
  deploy:
    runs-on: self-hosted
    env:
    steps:
      - name: "Nomeando Servi√ßos"
        run: echo "Fazendo deploy para ${{ inputs.SERVICES }}"

      - name: "Login to Docker Hub"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: "Baixar imagens do Docker Hub"
        run: |
          for service in ${{ inputs.SERVICES }}; do
            echo "Pulling image for $service..."
            docker pull ${{ inputs.DOCKER_IMAGE_PREFIX }}:$service || exit 1
          done

      - name: "Deploy nos containers da VPS"
        run: |
          docker ps -q --filter "ancestor=${{ inputs.DOCKER_IMAGE_PREFIX }}" | xargs -r docker stop | xargs -r docker rm || exit 1
          
          for i in $(seq 1 $(echo ${{ inputs.SERVICES }} | wc -w)); do
            service=$(echo ${{ inputs.SERVICES }} | cut -d ' ' -f $i)
            port=$(echo ${{ inputs.PORTS }} | cut -d ' ' -f $i)      # CORRIGIDO
            portout=$(echo ${{ inputs.PORTSOUT }} | cut -d ' ' -f $i) # CORRIGIDO
            echo "Starting container for $service..."
          
            if [ $(docker ps -a -q -f "name=$service") ]; then
              echo "Container $service already exists, removing..."
              docker stop $service || exit 1
              docker rm -f $service || exit 1
            fi
          
            docker run -d \
              --restart=always \
              -p ${port}:${portout} \
              --name $service \
              ${{ inputs.DOCKER_IMAGE_PREFIX }}:$service || exit 1
          done

